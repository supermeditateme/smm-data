{"version":3,"file":"annotations.js","sources":["../../../../js/lib/reducers/annotations.js"],"sourcesContent":["import {\n  SET_ANNOTATIONS,\n  CREATE_ANNOTATION,\n  SELECT_ANNOTATION,\n  MODIFY_ANNOTATION,\n  DELETE_ANNOTATION,\n} from '../actions';\n\nconst initialState = {\n  list: [], // { id, time, duration, name } and optionally { cssClass } ( used in minimap too )\n  selected: null, // Just an id. Use selector `getVisibleAnnotations`\n};\n\nexport function annotationsReducer(state = initialState, action) {\n  let newState = state;\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ANNOTATIONS:\n      newState = {\n        ...state,\n        list: payload,\n      };\n      // New list? Remove selection.\n      if (payload !== state.list) {\n        newState.selected = null;\n      }\n      break;\n\n    case CREATE_ANNOTATION:\n      if (process.env.NODE_ENV === 'development') {\n        if (state.list.find(annotation => annotation.id === payload.id)) {\n          console.warn(\n            'Trying to create annotation with same id as one of existing annotations!'\n          );\n        }\n      }\n\n      newState = {\n        ...state,\n        list: state.list.concat(payload),\n      };\n      break;\n\n    case SELECT_ANNOTATION:\n      newState = {\n        ...state,\n        selected: payload,\n      };\n      break;\n\n    case MODIFY_ANNOTATION:\n      if (process.env.NODE_ENV === 'development') {\n        if (!state.list.find(annotation => annotation.id === payload.id)) {\n          console.warn('Trying to modify non-existent annotation!');\n        }\n      }\n\n      newState = {\n        ...state,\n        list: state.list.map(\n          annotation => (annotation.id === payload.id ? payload : annotation)\n        ),\n      };\n      break;\n\n    case DELETE_ANNOTATION:\n      if (process.env.NODE_ENV === 'development') {\n        if (!state.list.find(annotation => annotation.id === payload)) {\n          console.warn('Trying to delete non-existent annotation!');\n        }\n      }\n\n      newState = {\n        ...state,\n        list: state.list.filter(annotation => annotation.id !== payload),\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n}\n\nexport default annotationsReducer;\n"],"names":["initialState","annotationsReducer","state","action","newState","type","payload","SET_ANNOTATIONS","list","selected","CREATE_ANNOTATION","process","env","NODE_ENV","find","annotation","id","warn","concat","SELECT_ANNOTATION","MODIFY_ANNOTATION","map","DELETE_ANNOTATION","filter"],"mappings":";;;;;;;;;;;;AAQA,IAAMA,eAAe;QACb,EADa;YAET,IAFS;CAArB;;AAKA,AAAO,SAASC,kBAAT,GAA0D;MAA9BC,KAA8B,uEAAtBF,YAAsB;MAARG,MAAQ;;MAC3DC,WAAWF,KAAf;MACQG,IAFuD,GAErCF,MAFqC,CAEvDE,IAFuD;MAEjDC,OAFiD,GAErCH,MAFqC,CAEjDG,OAFiD;;;UAIvDD,IAAR;SACOE,yBAAL;8BAEOL,KADL;cAEQI;;;UAGJA,YAAYJ,MAAMM,IAAtB,EAA4B;iBACjBC,QAAT,GAAoB,IAApB;;;;SAICC,2BAAL;UACMC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;YACtCX,MAAMM,IAAN,CAAWM,IAAX,CAAgB;iBAAcC,WAAWC,EAAX,KAAkBV,QAAQU,EAAxC;SAAhB,CAAJ,EAAiE;kBACvDC,IAAR,CACE,0EADF;;;;8BAOCf,KADL;cAEQA,MAAMM,IAAN,CAAWU,MAAX,CAAkBZ,OAAlB;;;;SAILa,2BAAL;8BAEOjB,KADL;kBAEYI;;;;SAITc,2BAAL;UACMT,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;YACtC,CAACX,MAAMM,IAAN,CAAWM,IAAX,CAAgB;iBAAcC,WAAWC,EAAX,KAAkBV,QAAQU,EAAxC;SAAhB,CAAL,EAAkE;kBACxDC,IAAR,CAAa,2CAAb;;;;8BAKCf,KADL;cAEQA,MAAMM,IAAN,CAAWa,GAAX,CACJ;iBAAeN,WAAWC,EAAX,KAAkBV,QAAQU,EAA1B,GAA+BV,OAA/B,GAAyCS,UAAxD;SADI;;;;SAMLO,2BAAL;UACMX,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;YACtC,CAACX,MAAMM,IAAN,CAAWM,IAAX,CAAgB;iBAAcC,WAAWC,EAAX,KAAkBV,OAAhC;SAAhB,CAAL,EAA+D;kBACrDW,IAAR,CAAa,2CAAb;;;;8BAKCf,KADL;cAEQA,MAAMM,IAAN,CAAWe,MAAX,CAAkB;iBAAcR,WAAWC,EAAX,KAAkBV,OAAhC;SAAlB;;;;;;;;SAQLF,QAAP;;;;;;"}