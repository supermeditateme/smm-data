{"version":3,"file":"viewMode.js","sources":["../../../../js/lib/selectors/viewMode.js"],"sourcesContent":["import { createSelector } from 'reselect';\nimport { getSecondWidth } from './index';\nimport { SEGMENT_DURATION } from '../constants';\n\nconst bipolarNames = [\n  'fp1-f7',\n  'f7-t3',\n  't3-t5',\n  't5-o1',\n  'fp1-f3',\n  'f3-c3',\n  'c3-p3',\n  'p3-o1',\n  'fz-cz',\n  'cz-pz',\n  'fp2-f4',\n  'f4-c4',\n  'c4-p4',\n  'p4-o2',\n  'fp2-f8',\n  'f8-t4',\n  't4-t6',\n  't6-o2',\n];\n\nconst standardChannelNames = [\n  'fp1',\n  'fp2',\n  'f3',\n  'f4',\n  'c3',\n  'c4',\n  'p3',\n  'p4',\n  'o1',\n  'o2',\n  'f7',\n  'f8',\n  't3',\n  't4',\n  't5',\n  't6',\n  'a1',\n  'a2',\n  'fz',\n  'cz',\n  'pz',\n  'f9',\n  'f10',\n  't9',\n  't10',\n  'p9',\n  'p10',\n  'ecg',\n];\n\nfunction normalizeLabel(label) {\n  if (standardChannelNames.includes(label.toLowerCase())) {\n    return label.toLowerCase();\n  }\n\n  const labelChunks = label\n    .replace('.', '')\n    .replace('-AA', '')\n    .replace(' - AA', '')\n    .split(' ');\n  return (labelChunks[labelChunks.length - 1] || label).toLowerCase();\n}\n\nexport const getDerivedChannels = createSelector(\n  state => state.viewMode.userSpecifiedChannels,\n  userSpecifiedChannels => [...bipolarNames, ...userSpecifiedChannels]\n);\n\nexport const getChannelSettings = createSelector(\n  state => state.header.signals,\n  state => state.viewMode.channelDefaults,\n  state => state.viewMode.perChannelSettings,\n  getDerivedChannels,\n  (edfSignals, defaults, channelSettings, derivedChannels) => {\n    const result = {};\n    if (!edfSignals) {\n      return result;\n    }\n\n    for (let signal of edfSignals) {\n      const { label } = signal;\n\n      if (result[label]) {\n        throw new Error(`Duplicate signal ${label}`);\n      }\n\n      const normalizedLabel = normalizeLabel(label);\n\n      result[label] = Object.assign({}, defaults, channelSettings[label], {\n        normalizedLabel,\n        type: 'input',\n        signal,\n      });\n    }\n\n    // For now, we assume only subtraction type of derived channels.\n    for (let label of derivedChannels) {\n      if (result[label]) {\n        throw new Error(`Duplicate signal ${label}`);\n      }\n\n      const [ch1, ch2] = label.split('-');\n      const signal1 = edfSignals.find(\n        ({ label }) => normalizeLabel(label) === ch1\n      );\n      const signal2 = edfSignals.find(\n        ({ label }) => normalizeLabel(label) === ch2\n      );\n\n      if (process.env.NODE_ENV === 'development') {\n        if (\n          !signal1 ||\n          !signal2 ||\n          signal1.sampleRate !== signal2.sampleRate ||\n          signal1.digitalMin !== signal2.digitalMin ||\n          signal1.digitalMax !== signal2.digitalMax\n        ) {\n          console.warn('Invalid derived channel!', label);\n        }\n      }\n\n      result[label] = Object.assign({}, defaults, channelSettings[label], {\n        normalizedLabel: label,\n        type: 'derived',\n        signals: [signal1, signal2],\n        invalid:\n          !signal1 ||\n          !signal2 ||\n          signal1.sampleRate !== signal2.sampleRate ||\n          signal1.digitalMin !== signal2.digitalMin ||\n          signal1.digitalMax !== signal2.digitalMax,\n      });\n    }\n\n    return result;\n  }\n);\n\nexport const getVisibleChannels = createSelector(\n  state => state.viewMode.visibleChannels,\n  getChannelSettings,\n  (visibleChannels, channelSettings) =>\n    visibleChannels.map(label => channelSettings[label])\n);\n\nexport const getPossibleChannels = createSelector(\n  getChannelSettings,\n  channelSettings =>\n    Object.keys(channelSettings).filter(\n      label => !channelSettings[label].invalid\n    )\n);\n\nexport const getStepWidth = createSelector(\n  getVisibleChannels,\n  state => state.header.dataRecordDuration,\n  getSecondWidth,\n  (visibleChannel, dataRecordDuration, secondWidth) => {\n    let stepWidth = {};\n\n    for (let channel of visibleChannel) {\n      const currentSampleRate = channel.signal.sampleRate;\n      let currentStepWidth = secondWidth / currentSampleRate;\n\n      if (!stepWidth[currentSampleRate]) {\n        const length =\n          SEGMENT_DURATION / dataRecordDuration * currentSampleRate;\n\n        const points = new Array(length).fill(null);\n\n        stepWidth[currentSampleRate] = points.map(\n          (item, idx) => idx * currentStepWidth\n        );\n      }\n    }\n\n    return stepWidth;\n  }\n);\n"],"names":["bipolarNames","standardChannelNames","normalizeLabel","label","includes","toLowerCase","labelChunks","replace","split","length","getDerivedChannels","createSelector","state","viewMode","userSpecifiedChannels","getChannelSettings","header","signals","channelDefaults","perChannelSettings","edfSignals","defaults","channelSettings","derivedChannels","result","signal","Error","normalizedLabel","Object","assign","ch1","ch2","signal1","find","signal2","process","env","NODE_ENV","sampleRate","digitalMin","digitalMax","warn","getVisibleChannels","visibleChannels","map","getPossibleChannels","keys","filter","invalid","getStepWidth","dataRecordDuration","getSecondWidth","visibleChannel","secondWidth","stepWidth","channel","currentSampleRate","currentStepWidth","SEGMENT_DURATION","points","Array","fill","item","idx"],"mappings":"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"}