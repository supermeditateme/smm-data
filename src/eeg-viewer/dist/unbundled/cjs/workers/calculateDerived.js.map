{"version":3,"file":"calculateDerived.js","sources":["../../../../js/lib/workers/calculateDerived.js"],"sourcesContent":["// Synchronous pure function that calculates derived data.\n\n// TODO code copypasted from `selectors/viewMode.js`. Solve imports for webworkers!\nconst standardChannelNames = [\n  'fp1',\n  'fp2',\n  'f3',\n  'f4',\n  'c3',\n  'c4',\n  'p3',\n  'p4',\n  'o1',\n  'o2',\n  'f7',\n  'f8',\n  't3',\n  't4',\n  't5',\n  't6',\n  'a1',\n  'a2',\n  'fz',\n  'cz',\n  'pz',\n  'f9',\n  'f10',\n  't9',\n  't10',\n  'p9',\n  'p10',\n  'ecg',\n];\n\nfunction normalizeLabel(label) {\n  if (standardChannelNames.includes(label.toLowerCase())) {\n    return label.toLowerCase();\n  }\n\n  const labelChunks = label\n    .replace('.', '')\n    .replace('-AA', '')\n    .replace(' - AA', '')\n    .split(' ');\n  return (labelChunks[labelChunks.length - 1] || label).toLowerCase();\n}\n\nexport default function calculateCoordinates(\n  dataSegment,\n  signals,\n  derivedChannels\n) {\n  const result = {};\n\n  let cursor = 0;\n  signals.forEach(function(signal, i) {\n    const signalSegment = new Int16Array(signal.sampleRate * 30);\n    for (let j = 0; j < 30; j++) {\n      const dataRecord = dataSegment[j];\n      if (!dataRecord) {\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(\n            `No dataRecord found at index ${j}; probably last segment.`\n          );\n        }\n        break;\n      }\n      signalSegment.set(\n        dataRecord.subarray(cursor, cursor + signal.sampleRate),\n        j * signal.sampleRate\n      );\n    }\n\n    result[signal.label] = signalSegment;\n    cursor += signal.sampleRate;\n  });\n\n  for (let derivedChannel of derivedChannels) {\n    const [ch1, ch2] = derivedChannel.split('-');\n    const signal1 = signals.find(({ label }) => normalizeLabel(label) === ch1);\n    const signal2 = signals.find(({ label }) => normalizeLabel(label) === ch2);\n    if (!signal1 || !signal2) {\n      console.error(`Channels not found! ${ch1} , ${ch2}`);\n      result[derivedChannel] = new Int16Array(256 * 30); // Dummy\n      continue;\n    }\n    if (signal1.sampleRate !== signal2.sampleRate) {\n      throw new Error(`Sample rates do not match! ${ch1} , ${ch2}`);\n    }\n\n    const signalSegment = new Int16Array(signal1.sampleRate * 30);\n    const dataLength = signalSegment.length;\n    for (let i = 0; i < dataLength; i++) {\n      signalSegment[i] = result[signal1.label][i] - result[signal2.label][i];\n    }\n    result[derivedChannel] = signalSegment;\n  }\n\n  return result;\n}\n"],"names":["standardChannelNames","normalizeLabel","label","includes","toLowerCase","labelChunks","replace","split","length","calculateCoordinates","dataSegment","signals","derivedChannels","result","cursor","forEach","signal","i","signalSegment","Int16Array","sampleRate","j","dataRecord","process","env","NODE_ENV","warn","set","subarray","derivedChannel","ch1","ch2","signal1","find","signal2","error","Error","dataLength"],"mappings":"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"}