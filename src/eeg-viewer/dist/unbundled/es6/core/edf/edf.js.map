{"version":3,"file":"edf.js","sources":["../../../../../js/lib/core/edf/edf.js"],"sourcesContent":["import EdfHeader from './edfHeader';\n\nexport default class Edf {\n  constructor(stream, header = null) {\n    this.stream = stream;\n\n    const headerPromise = header\n      ? Promise.resolve(header)\n      : new EdfHeader(stream);\n\n    return headerPromise.then(header => {\n      this.header = header;\n      return Promise.resolve(this);\n    });\n  }\n\n  readDataRecords(callback) {\n    const dataRecordSize =\n      this.header.signals.reduce((acc, v) => acc + v.sampleRate, 0) * 2;\n\n    let fuse = 0;\n\n    const handle = ({ done, value }) => {\n      if (done) {\n        callback(null);\n        return;\n      }\n      fuse += 1;\n      if (fuse > 1000000) throw new Error('Too long EEG');\n\n      callback(new Int16Array(value.buffer));\n      return this.stream.read(dataRecordSize).then(handle);\n    };\n\n    return this.stream.read(dataRecordSize).then(handle);\n  }\n}\n"],"names":["Edf","stream","header","headerPromise","Promise","resolve","EdfHeader","then","callback","dataRecordSize","signals","reduce","acc","v","sampleRate","fuse","handle","done","value","Error","Int16Array","buffer","read"],"mappings":";;;;;;IAEqBA;eACPC,MAAZ,EAAmC;;;QAAfC,MAAe,uEAAN,IAAM;;;;SAC5BD,MAAL,GAAcA,MAAd;;QAEME,gBAAgBD,SAClBE,QAAQC,OAAR,CAAgBH,MAAhB,CADkB,GAElB,IAAII,SAAJ,CAAcL,MAAd,CAFJ;;WAIOE,cAAcI,IAAd,CAAmB,kBAAU;YAC7BL,MAAL,GAAcA,MAAd;aACOE,QAAQC,OAAR,CAAgB,KAAhB,CAAP;KAFK,CAAP;;;;;oCAMcG,UAAU;;;UAClBC,iBACJ,KAAKP,MAAL,CAAYQ,OAAZ,CAAoBC,MAApB,CAA2B,UAACC,GAAD,EAAMC,CAAN;eAAYD,MAAMC,EAAEC,UAApB;OAA3B,EAA2D,CAA3D,IAAgE,CADlE;;UAGIC,OAAO,CAAX;;UAEMC,SAAS,SAATA,MAAS,OAAqB;YAAlBC,IAAkB,QAAlBA,IAAkB;YAAZC,KAAY,QAAZA,KAAY;;YAC9BD,IAAJ,EAAU;mBACC,IAAT;;;gBAGM,CAAR;YACIF,OAAO,OAAX,EAAoB,MAAM,IAAII,KAAJ,CAAU,cAAV,CAAN;;iBAEX,IAAIC,UAAJ,CAAeF,MAAMG,MAArB,CAAT;eACO,OAAKpB,MAAL,CAAYqB,IAAZ,CAAiBb,cAAjB,EAAiCF,IAAjC,CAAsCS,MAAtC,CAAP;OATF;;aAYO,KAAKf,MAAL,CAAYqB,IAAZ,CAAiBb,cAAjB,EAAiCF,IAAjC,CAAsCS,MAAtC,CAAP;;;;;;;;;"}