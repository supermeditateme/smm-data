{"version":3,"file":"calculateCoordinates.js","sources":["../../js/lib/workers/calculateCoordinates.js"],"sourcesContent":["// Synchronous pure function that calculates coordinates data.\n\nexport default function calculateCoordinates(\n  dataSegment,\n  signals,\n  channelHeight,\n  amplitude\n) {\n  const result = {};\n\n  for (let signalLabel in dataSegment) {\n    const data = dataSegment[signalLabel];\n    const dataLength = data.length;\n    const signalSegment = new Float32Array(dataLength); // TODO should try ints as well\n\n    const signalMeta = signals.find(signal => signal.label === signalLabel);\n    const digitalRange = 65535; // TODO TODO TODO signalMeta.digitalMax - signalMeta.digitalMin;\n    const scale = channelHeight / digitalRange;\n    for (let i = 0; i < dataLength; i++) {\n      signalSegment[i] = data[i] * scale * amplitude;\n    }\n\n    result[signalLabel] = signalSegment;\n  }\n\n  return result;\n}\n"],"names":["calculateCoordinates","dataSegment","signals","channelHeight","amplitude","result","signalLabel","data","dataLength","length","signalSegment","Float32Array","scale","find","signal","label","i","self","onmessage","msg","close","postMessage","apply"],"mappings":"aAEA,SAASA,qBACPC,EACAC,EACAC,EACAC,OAEMC,gBAEGC,WACDC,EAAON,EAAYK,GACnBE,EAAaD,EAAKE,OAClBC,EAAgB,IAAIC,aAAaH,GAIjCI,GAFaV,EAAQW,KAAK,mBAAUC,EAAOC,QAAUT,IAE7CH,EADO,OAEZa,EAAI,EAAGA,EAAIR,EAAYQ,MAChBA,GAAKT,EAAKS,GAAKJ,EAAQR,IAGhCE,GAAeI,OAZnB,IAAIJ,KAAeL,IAAfK,UAeFD,EAGTY,KAAKC,UAAY,YACXC,EAAIZ,KAAKa,mBAGNC,YAAYrB,qBAAqBsB,MAAM,KAAMH,EAAIZ"}